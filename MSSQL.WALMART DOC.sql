
USE[WALMARTSALES];

SELECT * FROM WALMART;

--FEATURE ENGINEERING

--1 ADDING TIME_OF_DAY
select
time,
   (case 
        when time between '00:00:00' and '12:00:00' then 'morning'
		when time between '12:01:00' and '16:00:00' then 'afternoon'
		else 'evening'
end) as time_of_day
from walmart;


alter table walmart add time_of_day varchar(20) null;

update walmart
set time_of_day = (case 
        when time between '00:00:00' and '12:00:00' then 'morning'
		when time between '12:01:00' and '16:00:00' then 'afternoon'
		else 'evening'
end);


--2 ADDING DAY_NAME
SELECT DATENAME(WEEKDAY, Date) as day_name
from walmart;

ALTER TABLE WALMART ADD DAY_NAME VARCHAR(30)NULL;

update walmart 
set DAY_NAME = DATENAME(WEEKDAY, Date);


--3 ADDING MONTH_NAME
SELECT DATENAME(MONTH, Date) as MONTH_NAME
from walmart;

ALTER TABLE WALMART ADD MONTH_NAME VARCHAR(30)NULL;

UPDATE WALMART
SET MONTH_NAME  = DATENAME(MONTH, Date);

--GENERIC QUESTION
--1
SELECT COUNT(DISTINCT(CITY))
FROM WALMART;

--2
SELECT CITY,BRANCH'UNIQUE BRANCH'
FROM WALMART
GROUP BY CITY,BRANCH
ORDER BY BRANCH;

--PRODUCT ANALYSIS
--Q1
SELECT COUNT(DISTINCT(PRODUCT_LINE))
FROM WALMART;

--Q2
SELECT TOP 1 PAYMENT FROM 
(SELECT TOP 1 PAYMENT,
COUNT(PAYMENT)'MCPM'
FROM WALMART
GROUP BY PAYMENT
ORDER BY MCPM DESC)
RESULT
ORDER BY MCPM DESC;

--Q3
SELECT TOP 1 PRODUCT_LINE AS MOSTSELLING FROM 
(SELECT TOP 3 PRODUCT_LINE,
COUNT(QUANTITY) AS TOTALSALE
FROM WALMART
GROUP BY PRODUCT_LINE
ORDER BY COUNT(QUANTITY) DESC)
RESULT
ORDER BY TOTALSALE DESC;

--Q4
SELECT MONTH_NAME,COGS,
0.05*COGS AS VAT
FROM WALMART
GROUP BY MONTH_NAME,COGS;

ALTER TABLE WALMART ADD VAT FLOAT(50)NULL;

UPDATE WALMART
SET VAT = 0.05*COGS
SELECT * FROM WALMART

SELECT MONTH_NAME,SUM(TOTAL)AS TOTALREVENUE
FROM WALMART
GROUP BY MONTH_NAME;

--Q5
SELECT TOP 1 MONTH_NAME AS LARGESTCOGS FROM
(SELECT TOP 2 MONTH_NAME,
SUM(COGS) AS TOTALCOGS
FROM WALMART 
GROUP BY MONTH_NAME
ORDER  BY TOTALCOGS DESC)
RESULT 
ORDER BY TOTALCOGS DESC;

--Q6
SELECT TOP 1 PRODUCT_LINE AS LARGESTREVENUE FROM
(SELECT TOP 2 PRODUCT_LINE,
SUM(VAT + COGS) AS TOTALREVENUE
FROM WALMART
GROUP BY PRODUCT_LINE
ORDER BY TOTALREVENUE DESC)
RESULT
ORDER BY TOTALREVENUE DESC;

--Q7
SELECT TOP 1 CITY AS LARGESTREVENUE FROM
(SELECT TOP 2 CITY,
SUM(TOTAL) AS TOTALREVENUE
FROM WALMART
GROUP BY CITY
ORDER BY TOTALREVENUE DESC)
RESULT
ORDER BY TOTALREVENUE DESC;

--Q8
SELECT TOP 1 PRODUCT_LINE FROM 
(SELECT TOP 3 PRODUCT_LINE,
SUM(VAT)AS LARGESTVAT
FROM WALMART
GROUP BY PRODUCT_LINE
ORDER BY LARGESTVAT DESC)
RESULT
ORDER BY LARGESTVAT DESC;

--Q10
SELECT TOP 1 BRANCH FROM
(SELECT TOP 2 BRANCH, 
COUNT(QUANTITY)AS PRODUCTSOLD,
AVG(QUANTITY) AS AVERAGESALES
FROM WALMART
GROUP BY BRANCH
ORDER BY BRANCH)
RESULT
ORDER BY BRANCH;

--Q11
SELECT TOP 1 PRODUCT_LINE,GENDER FROM
(SELECT TOP 2 PRODUCT_LINE,GENDER
FROM WALMART
GROUP BY PRODUCT_LINE,GENDER
ORDER BY PRODUCT_LINE DESC)
RESULT
ORDER BY PRODUCT_LINE DESC;

--Q12
SELECT PRODUCT_LINE,AVG(RATING) AS AVERAGERATING
FROM WALMART
GROUP BY PRODUCT_LINE
ORDER BY PRODUCT_LINE;

--CUSTOMER ANALYSIS
--Q1
SELECT COUNT(DISTINCT(CUSTOMER_TYPE))AS CUSTOMERTYPE
FROM WALMART;

--Q2
SELECT COUNT(DISTINCT(PAYMENT))AS PAYMENTMETHOD
FROM WALMART;

--Q3
SELECT TOP 1 CUSTOMER_TYPE  FROM
(SELECT TOP 2 CUSTOMER_TYPE,
COUNT(QUANTITY) AS MOSTBUYING
FROM WALMART
GROUP BY CUSTOMER_TYPE,QUANTITY
ORDER BY COUNT(QUANTITY)DESC)
RESULT
ORDER BY MOSTBUYING DESC;







  
